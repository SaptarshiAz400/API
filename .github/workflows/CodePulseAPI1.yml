name: Build and deploy .NET Core application

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: CodePulseAPI1
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: AngularProject1_group
  AZURE_APIM_SERVICENAME: CodePulseAPIManagement1
  AZURE_APIM_API_ID: CodePulseAPI
  AZURE_APIM_APPSERVICEURL: https://codepulseapi1.azurewebsites.net
  SWASHBUCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.6.2
  SWASHBUCKLE_DOTNET_CORE_VERSION: 3.1.x
  API_IMPORT_SPECIFICATION_PATH: ./publish/swagger.json
  API_IMPORT_DLL: ./bin/Release/net7.0/CodePulse.API.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6
  WORKING_DIRECTORY: .

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}

      - name: Build the project
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

      # Add this step to list the contents of the build output directory
      - name: List build output
        run: |
          echo "Listing the contents of the build output directory"
          Get-ChildItem -Path ${{ env.WORKING_DIRECTORY }}/bin/${{ env.CONFIGURATION }}/net7.0/ -Recurse

      - name: Run tests
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build

      - name: Publish the project
        run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Install Swashbuckle CLI .NET Global Tool
        run: |
          dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
          dotnet tool list -g
        if: success()

      - name: Verify installed .NET tools
        run: dotnet tool list -g

      - name: Restore .NET tools
        run: dotnet tool restore

      - name: Generate Open API Specification Document
        run: |
           dotnet swagger tofile --output "${{ env.API_IMPORT_SPECIFICATION_PATH }}" "${{ env.API_IMPORT_DLL }}" "${{ env.API_IMPORT_VERSION }}"
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Install .NET Core 6.0 Runtime
        run: |
          echo "Installing .NET Core 6.0 runtime"
          curl -L https://dotnet.microsoft.com/download/dotnet/thank-you/runtime-6.0.1-windows-x64-installer -o dotnet-install.ps1
          .\dotnet-install.ps1 -InstallDir $env:RUNNER_TEMP\.dotnet -Runtime dotnet
          echo "$env:RUNNER_TEMP\.dotnet" >> $env:GITHUB_PATH

      - name: Verify .NET installation
        run: dotnet --info

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.CodePulseAPI1_390E }}

      - name: Import API into Azure API Management
        run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" --service-name "${{ env.AZURE_APIM_SERVICENAME }}" --api-id "${{ env.AZURE_APIM_API_ID }}" --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" --specification-format OpenApi --subscription-required false

      - name: Logout
        run: az logout
